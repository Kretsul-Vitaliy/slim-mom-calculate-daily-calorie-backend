{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Connections API SlimMom",
    "license": {
      "name": "API SlimMom v.1.0 Website ",
      "url": "https://slimcalculatebackend.herokuapp.com/"
    }
  },
  "servers": [{ "url": "https://slimcalculatebackend.herokuapp.com" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Products",
      "description": "Search specified product endpoint"
    },
    {
      "name": "Users",
      "description": "User endpoint"
    },
    {
      "name": "DailyCalories",
      "description": "Calculate daily calories"
    }
  ],
  "paths": {
    "/api/v1/products": {
      "post": {
        "tags": ["Products"],
        "summary": "Add products",
        "parameters": [],
        "requestBody": {
          "description": "Options object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddProductsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      }
    },
    "/api/v1/dailycalories": {
      "post": {
        "tags": ["DailyCalories"],
        "summary": "Calculate dayli calories",
        "parameters": [],
        "requestBody": {
          "description": "Options object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DailyCaloriesRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyCaloriesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      }
    },
    "/api/v1/dailycalories/public": {
      "post": {
        "tags": ["DailyCalories"],
        "summary": "Calculate dayli calories public",
        "parameters": [],
        "requestBody": {
          "description": "Options object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DailyCaloriesPublicRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyCaloriesPublicResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      }
    },
    "/api/v1/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "409": {
            "description": "Email is already exist",
            "content": {}
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Success",
            "content": {}
          }
        }
      }
    },
    "/api/v1/products?search={название}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get specified product",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },

    "/api/v1/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "User info",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              }
            }
          },
          "404": {
            "description": "No user found",
            "content": {}
          }
        }
      }
    },
    "/api/v1/users/verify": {
      "get": {
        "tags": ["Users"],
        "summary": "repeat email for verify",
        "parameters": [],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVerifyResponse"
                }
              }
            }
          },
          "404": {
            "description": "Verification has already been passed",
            "content": {}
          },
          "503": {
            "description": "Service Unavailable",
            "content": {}
          }
        }
      }
    },
    "/api/v1/users/verify/:token": {
      "post": {
        "tags": ["Users"],
        "summary": "verify",
        "parameters": [],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/verifyEmail"
                }
              }
            }
          },
          "404": {
            "description": "No user found",
            "content": {}
          }
        }
      }
    },
    "/api/v1/products/:date": {
      "get": {
        "tags": ["Products"],
        "summary": "Search products by date",
        "parameters": [],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchProductsByDate"
                }
              }
            }
          },
          "404": {
            "description": "Cannot remove product with ID",
            "content": {}
          }
        }
      }
    },
    "/api/v1/products/:id": {
      "delete": {
        "tags": ["Products"],
        "summary": "Remove products by id",
        "parameters": [],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveProductsByIdRespose"
                }
              }
            }
          },
          "404": {
            "description": "Not found product by id",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DailyCaloriesRequest": {
        "type": "object",
        "required": ["height", "desiredWeight", "age", "currentWeight", "bloodType"],
        "properties": {
          "height": {
            "type": "number",
            "description": "Height",
            "example": 172
          },
          "desiredWeight": {
            "type": "number",
            "description": "Desired Weight",
            "example": 80
          },
          "age": {
            "type": "number",
            "description": "Age",
            "example": 20
          },
          "currentWeight": {
            "type": "number",
            "description": "Current weight",
            "example": 98
          },
          "bloodType": {
            "type": "number",
            "description": "Blood type",
            "example": 2
          }
        }
      },
      "AddProductRequest": {
        "type": "object",
        "required": ["height", "weight", "calories", "date"],
        "properties": {
          "nameProduct": {
            "type": "string",
            "description": "Name product",
            "example": "Egg"
          },
          "weight": {
            "type": "number",
            "description": "Desired Weight",
            "example": 80
          },
          "calories": {
            "type": "number",
            "description": "Age",
            "example": 20
          },
          "date": {
            "type": "string",
            "description": "Current weight",
            "example": "20.07.2022"
          }
        }
      },
      "AddProductsResponse": {
        "type": "object",
        "properties": {
          "nameProduct": {
            "type": "string",
            "description": "Name product",
            "example": "Egg"
          },
          "weight": {
            "type": "number",
            "description": "Desired Weight",
            "example": 80
          },
          "calories": {
            "type": "number",
            "description": "Age",
            "example": 20
          },
          "date": {
            "type": "string",
            "description": "Current weight",
            "example": "20.07.2022"
          },
          "owner": {
            "type": "string",
            "description": "User id",
            "example": "62c6bf8d4b607ce4bf2e4deb"
          }
        }
      },
      "DailyCaloriesPublicRequest": {
        "type": "object",
        "required": ["height", "desiredWeight", "age", "currentWeight", "bloodType"],
        "properties": {
          "height": {
            "type": "number",
            "description": "Height",
            "example": 172
          },
          "desiredWeight": {
            "type": "number",
            "description": "Desired Weight",
            "example": 80
          },
          "age": {
            "type": "number",
            "description": "Age",
            "example": 20
          },
          "currentWeight": {
            "type": "number",
            "description": "Current weight",
            "example": 98
          },
          "bloodType": {
            "type": "number",
            "description": "Blood type",
            "example": 2
          }
        }
      },
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "login", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "test"
          },
          "login": {
            "type": "string",
            "description": "User's login",
            "example": "test@test.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "testqwe123"
          }
        }
      },
      "DailyCaloriesResponse": {
        "type": "object",
        "properties": {
          "calories": {
            "type": "number",
            "description": "Daily calorie",
            "example": "347"
          },
          "categories": {
            "type": "array",
            "description": "Categories product",
            "example": ["мясо", "мучные", "молочные"]
          },
          "owner": {
            "type": "string",
            "description": "User id",
            "example": "62c6bf8d4b607ce4bf2e4deb"
          }
        }
      },
      "DailyCaloriesPublicResponse": {
        "type": "object",
        "properties": {
          "calories": {
            "type": "number",
            "description": "Daily calorie",
            "example": "347"
          },
          "categories": {
            "type": "array",
            "description": "Categories product",
            "example": ["мясо", "мучные", "молочные"]
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Registartion status",
            "example": "success"
          }
        }
      },
      "UserInfo": {
        "type": "object",
        "required": ["currentWeight", "height", "age", "desiredWeight", "bloodType"],
        "properties": {
          "message": {
            "type": "string",
            "description": "info user",
            "example": "success"
          },
          "currentWeight": {
            "type": "number",
            "description": "User's current weight",
            "example": "60"
          },
          "height": {
            "type": "number",
            "description": "User's height",
            "example": "165"
          },
          "age": {
            "type": "number",
            "description": "User's age",
            "example": "25"
          },
          "desiredWeight": {
            "type": "number",
            "description": "User's desired weight",
            "example": "55"
          },
          "bloodType": {
            "type": "number",
            "description": "User's blood type",
            "example": "4"
          }
        }
      },
      "SearchProductsByDate": {
        "type": "object",
        "required": ["nameProduct", "weight", "calories", "date", "owner"],
        "properties": {
          "nameProduct": {
            "type": "string",
            "description": "Name product",
            "example": "Egg"
          },
          "weight": {
            "type": "number",
            "description": "Desired Weight",
            "example": 80
          },
          "calories": {
            "type": "number",
            "description": "Age",
            "example": 20
          },
          "date": {
            "type": "string",
            "description": "Current weight",
            "example": "20.07.2022"
          },
          "owner": {
            "type": "string",
            "description": "User id",
            "example": "62c6bf8d4b607ce4bf2e4deb"
          }
        }
      },
      "RemoveProductsByIdRespose": {
        "type": "object",
        "required": ["nameProduct", "weight", "calories", "date", "owner"],
        "properties": {
          "nameProduct": {
            "type": "string",
            "description": "Name product",
            "example": "Egg"
          },
          "weight": {
            "type": "number",
            "description": "Desired Weight",
            "example": 80
          },
          "calories": {
            "type": "number",
            "description": "Age",
            "example": 20
          },
          "date": {
            "type": "string",
            "description": "Current weight",
            "example": "20.07.2022"
          },
          "owner": {
            "type": "string",
            "description": "User id",
            "example": "62c6bf8d4b607ce4bf2e4deb"
          }
        }
      },
      "verifyEmail": {
        "type": "object",
        "required": ["verificationTokenEmail"],
        "properties": {
          "verificationTokenEmail": {
            "type": "string",
            "description": "verification token Email",
            "example": "c729c276-850f-4dbe-aaf1-003d7195ac95"
          }
        }
      },
      "UserVerifyResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Verification successful",
            "example": "success"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["login", "password"],
        "properties": {
          "login": {
            "type": "string",
            "description": "User's login",
            "example": "test@test.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "testqwe123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "required": ["login", "password"],
        "properties": {
          "login": {
            "type": "string",
            "description": "User's login",
            "example": "test"
          },
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyYzY0N2EzMWU0ZGFmNTA1NTE0MzQ1OCIsImlhdCI6MTY1NzE2MTc5MSwiZXhwIjoxNjU3MTY1MzkxfQ.UkCkSm5CZBDmGJ7gXBJWlQxdRt3udhbtVe7ROefW0B8"
          }
        }
      },
      "ProductsResponse": {
        "type": "object",
        "properties": {
          "Products": {
            "type": "object",
            "description": "data",
            "example": "<Name of the product>"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
